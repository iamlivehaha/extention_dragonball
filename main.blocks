<xml xmlns="https://developers.google.com/blockly/xml"><block type="pxt-on-start" id="31WEX~59ISp5XJS9+~m)" x="0" y="0"><statement name="HANDLER"><block type="typescript_statement" id="_EgXhsc|2}mJ_`tD,KI[" editable="false"><mutation xmlns="http://www.w3.org/1999/xhtml" line0="namespace DigitalPet {" line1="" line2="&#9;/**" line3="&#9; * WriteTimer to Moving fish" line4="     * @param Timer [0-500] the Time value; eg:  0, 255" line5="&#9;*/" line6="    //% blockId=DigitalPet_MoveFish" line7="    //% block=&quot;移动的鱼 |%value|&quot;" line8="    //% weight=55" line9="    //% value.min=0 value.max=500" line10="    export function MoveFish (Timer: number) {" line11="    if (Timer &lt; 20) {" line12="        images.createBigImage(`" line13="        . . . . . . . . . ." line14="        . # # . # . . . . ." line15="        # . . # . . . . . ." line16="        . # # . # . . . . ." line17="        . . . . . . . . . ." line18="        `).showImage(Timer % 5)" line19="    } else if (Timer &gt;= 20&amp;&amp;Timer&lt;30) {" line20="        images.createBigImage(`" line21="            . . . . . . . . . ." line22="            . . . . . . . . . ." line23="            . # # . # . . . . ." line24="            # . . # . . . . . ." line25="            . # # . # . . . . ." line26="            `).showImage(Timer % 5)" line27="    } else if (Timer &gt;= 30&amp;&amp;Timer&lt;40) {" line28="        images.createBigImage(`" line29="            . . . . . . . . . ." line30="            . . . . . . . . . ." line31="            . . . . . . . . . ." line32="            . # # . # . . . . ." line33="            # . . # . . . . . ." line34="            `).showImage(Timer % 5)" line35="    } else if (Timer &gt;= 40) {" line36="        images.createBigImage(`" line37="            . . . . . . . . . ." line38="            . # # # . . . . . ." line39="            . # . # . . . . . ." line40="            . # . # . . . . . ." line41="            # # # # # . . . . ." line42="            `).showImage(0)" line43="    }" line44="" line45="    }       " line46="}" numlines="47"></mutation><next><block type="typescript_statement" id="4;o,OTE0={1(+5B:+,y+" editable="false"><mutation xmlns="http://www.w3.org/1999/xhtml" line0="namespace Sound {" line1="    let Apin = AnalogPin.P0;" line2="    let Dpin = DigitalPin.P1;" line3="" line4="    let noise = 0;" line5="    let volt = 0;" line6="    let adc = 0;" line7="" line8="" line9="    /**" line10="     * Set the Apin connected to Sound Sensor;" line11="     * @param a_pin_arg Sound Sensor analog connected pin;" line12="     */" line13="    //% blockId=Sound_setApin" line14="    //% block=&quot;声音传感器的模拟信号连接到引脚 |%a_pin_arg|&quot;" line15="    //% weight = 85" line16="    export function setApin(a_pin_arg: AnalogPin): void {" line17="        Apin = a_pin_arg;" line18="    }" line19="" line20="" line21="    /**" line22="     * Set the Dpin connected to Sound Sensor;" line23="     * @param d_pin_arg Sound Sensor digital connected pin;" line24="     */" line25="    //% blockId=Sound_setDpin" line26="    //% block=&quot;声音传感器的数字信号连接到引脚(obsolate) |%d_pin_arg|&quot;" line27="    //% weight = 75" line28="    export function setDpin(d_pin_arg: DigitalPin): void {" line29="        Dpin = d_pin_arg;" line30="        pins.setPull(Dpin, PinPullMode.PullUp);" line31="    }" line32="" line33="" line34="    /**" line35="     * Return the sound sensor adc value from the AnalogPin;" line36="     */" line37="    //% blockId=Sound_getADCValue" line38="    //% block=&quot;获取声音传感器的 adc 值&quot;" line39="    //% weight = 65" line40="    export function getADCValue(): number {" line41="        adc = pins.analogReadPin(Apin);" line42="        return adc;" line43="    }" line44="" line45="    /**" line46="     * Return the sound sensor volt value from the AnalogPin;" line47="     */" line48="    //% blockId=Sound_getVoltValue" line49="    //% block=&quot;获取声音传感器的 volt 值&quot;" line50="    //% weight = 55" line51="    export function getVoltValue(): number {" line52="        adc = pins.analogReadPin(Apin);" line53="        volt = adc * 3300 / 1024;" line54="        return volt;" line55="    }" line56="" line57="    /**" line58="     * Return the sound sensor volt value from the DigitalPin;" line59="     */" line60="    //% blockId=Sound_getNoise" line61="    //% block=&quot;是否有噪声&quot;" line62="    //% weight = 45" line63="    export function getNoise(): number {" line64="        noise = pins.analogReadPin(Apin);" line65="        if (noise&gt;40) {" line66="            return 1;" line67="        } else {" line68="            return 0;" line69="        }" line70="    }" line71="}" numlines="72"></mutation><next><block type="typescript_statement" id=")dH)7E0J68bNk`nc_}D)" editable="false"><mutation xmlns="http://www.w3.org/1999/xhtml" line0="namespace Teris {" line1="" line2="&#9;/**" line3="&#9; * move block right 1 step" line4="     * @Current_Squares the current block list; eg:[]" line5="     * @All_Sprites the list of all blocks; eg:[]" line6="&#9;*/" line7="    //% blockId=DigitalPet_MoveFish" line8="    //% block=&quot;方块左移 |%value|&quot;" line9="    //% weight=55" line10="    export function BlockMoveLeft (Current_Squares:game.LedSprite[],All_Sprites:game.LedSprite[]) {" line11="        let tempx =0" line12="        let tempy =0" line13="        let Ismoveable =1" line14="        for (let 值32 of Current_Squares) {" line15="            tempx = 值32.x() - 1" line16="            tempy = 值32.y()" line17="            if (tempx &lt; 0) {" line18="                Ismoveable = 0" line19="                break;" line20="            } else {" line21="                Ismoveable = 1" line22="            }" line23="            for(let spt of All_Sprites)" line24="            {" line25="                if(spt.y()==tempy&amp;&amp;spt.x()==tempx)" line26="                {" line27="                    Ismoveable=0" line28="                    break;" line29="                }" line30="            }" line31="            if(Ismoveable==0)break" line32="        }" line33="        if (Ismoveable == 1) {" line34="            for (let Current_sprite of Current_Squares) {" line35="                Current_sprite.set(LedSpriteProperty.Direction, -90)" line36="                Current_sprite.move(1)" line37="            }" line38="        }  " line39="    }" line40="}" numlines="41"></mutation></block></next></block></next></block></statement></block></xml>