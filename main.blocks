<xml xmlns="https://developers.google.com/blockly/xml"><block type="pxt-on-start" id="xRRgvHNlG#rZ^u`HECiY" x="0" y="0"><statement name="HANDLER"><block type="typescript_statement" id="vVnMK`KzQxi[O_F-Op41" editable="false"><mutation xmlns="http://www.w3.org/1999/xhtml" line0="namespace Liquid {" line1="    let pin = AnalogPin.P0" line2="    let volt = 0;" line3="    let adc = 0;" line4="" line5="" line6="    /**" line7="     * Set pin at which the Liquid Level Senor AOUT line is connected;" line8="     * @param pin_arg pin at which the Liquid Level Senor AOUT line is connected;" line9="     */" line10="    //% blockId=Liquid_setPin" line11="    //% block=&quot;set liquid pin |%pinarg|&quot;" line12="    //% weight = 85" line13="    export function setPin(pin_arg: AnalogPin): void {" line14="        pin = pin_arg;" line15="    }" line16="" line17="" line18="    /**" line19="     * Return the adc value from the AnalogPin;" line20="     */" line21="    //% blockId=Liquid_getADCValue" line22="    //% block=&quot;get liquid adc value&quot;" line23="    //% weight = 75" line24="    export function getADCValue(): number {" line25="        adc = pins.analogReadPin(pin);" line26="        return adc;" line27="    }" line28="" line29="    /**" line30="     * Return the volt value from the AnalogPin;" line31="     */" line32="    //% blockId=Liquid_getVoltValue" line33="    //% block=&quot;get liquid volt value&quot;" line34="    //% weight = 65" line35="    export function getVoltValue(): number {" line36="        adc = pins.analogReadPin(pin);" line37="        volt = adc * 3300 / 1024;" line38="        return volt;" line39="    }" line40="}" numlines="41"></mutation></block></statement></block></xml>